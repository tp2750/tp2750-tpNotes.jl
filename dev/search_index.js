var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = tpNotes","category":"page"},{"location":"#tpNotes.jl","page":"Home","title":"tpNotes.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Purpose","page":"Home","title":"Purpose","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This repo tracks my notes on things I learn in Julia.","category":"page"},{"location":"#Development","page":"Home","title":"Development","text":"","category":"section"},{"location":"#PkgTemplates","page":"Home","title":"PkgTemplates","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This repo was setup using this snippet:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using PkgTemplates\njulia> t = Template(; \n    user=\"tp2750\",\n    dir=\".\",\n    authors=\"Thomas Poulsen\",\n    julia=v\"1.5.3\",\n    plugins=[\n        License(; name=\"GPL-2.0+\"),\n        Git(; manifest=false, ssh=false),\n        GitHubActions(;extra_versions=[\"nightly\"], x86=false, windows=false, osx=false), ## skip some defaults\n        Codecov(),\n        Documenter{GitHubActions}(),\n        Develop(),\n    ],\n  )\njulia> t(\"tpNotes\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Created the repo \"tpNotes.jl\" in Github and just did:","category":"page"},{"location":"","page":"Home","title":"Home","text":"tpNotes$ git push --set-upstream origin master","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that the project name in PkgTemplates doe not include \".jl\", but the repo-name does.","category":"page"},{"location":"#Overloading-Base-operator","page":"Home","title":"Overloading Base operator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Overloading a base bianry operator (like +):","category":"page"},{"location":"","page":"Home","title":"Home","text":"Define my own struct.\nDefine a method of a base function using that struct. Use symbol notation for the operator.","category":"page"},{"location":"","page":"Home","title":"Home","text":"No import or export needed.","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"struct People\n    name::String\nend\n\nBase.:+(p1::People, p2::People) = \"$(string(p1.name)) and $(string(p2.name))\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then we have","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using tpNotes\njulia> p1 = tpNotes.People(\"Søren\")\njulia> p2 = tpNotes.People(\"Mette\")\njulia> p1 + p2 == \"Søren and Mette\"\ntrue","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [tpNotes]","category":"page"}]
}
